Installation and execution:

- Extract the source and class files from the jar:
  
  $ mkdir ODA
  $ mv ODA.jar ODA/
  $ cd ODA
  $ jar xf ODA.jar

- Running the serial version:

  $ java -cp ODA.jar -Xmx1000M SerialODA corpus/lda en_2005_02.bag ensy_2005_02.bag
  where ODA/corpus/lda is the working directory and en_2005_02.bag, 
  ensy_2005_02.bag the input files.

- Running the parallel version:

  Install MPJ: http://sourceforge.net/projects/mpjexpress/
  
  Running in Multi-core configuration:
  $ mpjrun.sh -np 2 -cp ODA.jar -Xmx1000M ODA_Multicore corpus/lda en_2005_02.bag ensy_2005_02.bag

  You will note when playing with the number of processes (that must be a power of 2) that the time
  for each batch increases. This is because our parallel version maintain a constant amount of work for
  each process, i.e. increasing their number increase the basis (the window of interest) and 
  batch size (the size of the incoming sets of documents).

  Running in Cluster configuration:
  $ ....

- Visualize the result

  These two programs only writes on the standard outputs the identifiers of the matched
  documents. To visualize the content of these matched documents, you need to run the
  Reader class.

  $ java -cp ODA.jar:lib/jdom-1.1.2.jar -Xmx1000M  gui/Reader

  This application reads a file during its creation containing the matched documents
  identifiers. In order to find what our program has found for matched documents, first
  run the parallel or serial version and redirect the standard output into a file. Use
  the Reader to read this file.